import RPi.GPIO as GPIO
import time
from datetime import datetime
import sys

GPIO_PIN = 16 
BOUNCE_TIME = 200  

global count
count = 0 


output_file = "CountData.csv"


with open(output_file, mode='w') as file:
    file.write("Timestamp,Count in Last 10 Seconds\n")


def count_callback(channel):
    global count
    count += 1
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S.%f")
    print("Count detected at: {}".format(timestamp))


try:
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(GPIO_PIN, GPIO.IN, pull_up_down=GPIO.PUD_UP)

    GPIO.add_event_detect(GPIO_PIN, GPIO.FALLING, callback=count_callback, bouncetime=BOUNCE_TIME)

    print("Waiting for counts on GPIO pin {}...".format(GPIO_PIN))

    start_time = time.time()  # Store the start time
    duration = 120  # 2 minutes in seconds

    while True:

        elapsed_time = time.time() - start_time
        if elapsed_time >= duration:
            print("2 minutes have passed. Exiting program...")
            break
        
        time.sleep(10)
        

        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S.%f")
        print("Total counts in the last 10 seconds: {}".format(count))
        

        with open(output_file, mode='a') as file:
            file.write("{},{}\n".format(timestamp, count))
        
        count = 0

except KeyboardInterrupt:
    print("\nExiting program...")

finally:
    GPIO.remove_event_detect(GPIO_PIN)
    GPIO.cleanup()
    print("GPIO cleaned up.")
