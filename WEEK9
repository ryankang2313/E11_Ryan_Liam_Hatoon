import RPi.GPIO as GPIO
import time
from datetime import datetime
import sys


GPIO_PIN = 16 
BOUNCE_TIME = 200  

global count
count = 0 


def count_callback(channel):
    global count
  
    count += 1
  
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S.%f")
    print("Count detected at: {}".format(timestamp))


try:
    
    GPIO.setmode(GPIO.BCM)


    GPIO.setup(GPIO_PIN, GPIO.IN, pull_up_down=GPIO.PUD_UP)

   
    GPIO.add_event_detect(GPIO_PIN, GPIO.FALLING, callback=count_callback, bouncetime=BOUNCE_TIME)

    print("Waiting for counts on GPIO pin {}...".format(GPIO_PIN))

    
    while True:
        
        time.sleep(10)
        
        print("Total counts in the last minute: {}".format(count))
       
        count = 0

if len(sys.argv) < 2:
  print("this script requires an input argument specifying the run time in seconds")
  exit()
  # run_time = 10
else:
  run_time = int(sys.argv[1])
  
count=0
while count < run_time:
  count += 1
  print("taking data entry:",count)
  time.sleep(1) 

  try:
    aqdata = pm25.read()
    # print(aqdata)
  except RuntimeError:
    print("Unable to read from sensor, retrying...")
    continue

except KeyboardInterrupt:
    print("\nExiting program...")

finally:
    GPIO.remove_event_detect(GPIO_PIN)
    GPIO.cleanup()
    print("GPIO cleaned up.")
